filter(subj_id%in%moved) %>%
dplyr::select(subj_id,search_type,x) %>%
group_by(subj_id,search_type) %>%
summarise(x=mean(x)) %>%
spread(key=search_type,value=x) %>%
mutate(diff=conjunction-shape)
E2.estimate_by_set_size <- E2.estimates %>%
filter(subj_id%in%moved) %>%
dplyr::select(subj_id,set_size,x) %>%
group_by(subj_id,set_size) %>%
summarise(x=mean(x)) %>%
spread(key=set_size,value=x,sep='') %>%
mutate(diff=set_size8-set_size4)
E2.estimate_slopes <- E2.estimates %>%
filter(subj_id%in%moved) %>%
group_by(subj_id,search_type) %>%
nest() %>%
mutate(model = map(data, ~ lm(x ~ set_size, data = .x)),
tidy = map(model, ~ tidy(.x))) %>%
unnest(tidy) %>%
filter(term == 'set_size') %>%
dplyr::select(c(subj_id,search_type,estimate))%>%
pivot_wider(
id_cols = 'subj_id',
names_from = c('search_type'),
values_from = estimate
)
E2.slopes_by_resp <- E2.search_df %>%
filter(include==1) %>%
group_by(subj_id,search_type,response) %>%
nest() %>%
mutate(model = map(data, ~ lm(RTcorrected ~ set_size, data = .x)),
tidy = map(model, ~ tidy(.x))) %>%
unnest(tidy) %>%
filter(term=='set_size')%>%
dplyr::select(subj_id,search_type,response,estimate)%>%
pivot_wider(id_cols = 'subj_id',
names_from = c('search_type','response'),
values_from = estimate)
# Both search slopes and estimated slopes
E2.all_slopes <- na.omit(merge(E2.estimate_slopes,E2.slopes_wide)%>%merge(E2.slopes_by_resp));
E2.all_slopes_no_insight <- E2.all_slopes%>%filter(shape>conjunction);
E2.no_insight_subjects <- E2.all_slopes_no_insight %>%
pull(subj_id);
E2.median_estimates_no_insight <- E2.estimates %>%
filter(subj_id%in%moved & subj_id%in%E2.no_insight_subjects) %>%
group_by(set_size,search_type) %>%
summarise(median_estimate= median(x),
sem_estimate=se(x)*1.2533)
# filter participants that rated conjunction4 as slower than shape8
E2.correct_estimates <- E2.estimates %>%
pivot_wider(id_cols=subj_id,
names_from=c('search_type','set_size'),
values_from=x) %>%
filter(conjunction_4<shape_8) %>%
'$'(subj_id)
p <- ggplot(data=E2.median_estimates,
aes(x=set_size, y=median_estimate, color=search_type, fill=search_type)) +
geom_line(size=1) +
geom_point(aes(shape = search_type), size=4, color="black",stroke=1.5) +
scale_shape_manual(values=c(4,22))+
scale_fill_manual(values = c('black',"#e41a1c"))+
scale_color_manual(values = c('black',"#e41a1c"))+
geom_errorbar(aes(ymin=median_estimate-sem_estimate,
ymax=median_estimate+sem_estimate),linetype="solid", width=0.6) +
labs(x='set size',y='estimated difficulty (a.u.)', title='Difficulty estimates:\nall subjects') +
theme_bw()+
scale_x_continuous(breaks = c(4,8))+
theme(legend.position='none',
legend.background = element_rect(fill=NA),
axis.text.y = element_blank())+
guides(color = FALSE, linetype=FALSE)
ggsave('figure/termination/estimates.pdf',p,width=2.5,height=4.2)
p <- ggplot(data=E2.median_estimates_no_insight,
aes(x=set_size, y=median_estimate, color=search_type, fill=search_type)) +
geom_line(size=1) +
geom_point(aes(shape = search_type), size=4, color="black",stroke=1.5) +
scale_shape_manual(values=c(4,22))+
scale_fill_manual(values = c('black',"#e41a1c"))+
scale_color_manual(values = c('black',"#e41a1c"))+
geom_errorbar(aes(ymin=median_estimate-sem_estimate,
ymax=median_estimate+sem_estimate),linetype="solid", width=0.6) +
labs(x='set size',y='estimated difficulty (a.u.)', title='Difficulty estimates:\nno metacognitive insight') +
theme_bw()+
scale_x_continuous(breaks = c(4,8))+
theme(legend.position='none',
legend.background = element_rect(fill=NA),
axis.text.y = element_blank())+
guides(color = FALSE, linetype=FALSE)
ggsave('figure/termination/estimates_no_insight.pdf',p, width=2.5,height=4.2)
E2.median_search_times_no_insight <- E2.search_df %>%
mutate(response=ifelse(test_part=='presence1','present','absent')) %>%
filter(include==1 & subj_id%in%E2.no_insight_subjects) %>%
group_by(response,set_size,search_type, subj_id) %>%
summarise(RT=mean(RTcorrected))%>%
group_by(response,set_size,search_type)%>%
summarise(median_RT= median(RT),
sem_RT=bootstrap_error(RT,N_perm))
RTplot <- ggplot(data=E2.median_search_times_no_insight,
aes(x=set_size, y=median_RT, color=search_type, fill=search_type, linetype=response)) +
geom_line(size=1) +
geom_point(aes(shape = search_type), size=4, color="black",stroke=1.5, alpha=0.8) +
scale_shape_manual(values=c(4,22))+
scale_fill_manual(values = c('black',"#e41a1c"))+
scale_color_manual(values = c('black',"#e41a1c"))+
scale_linetype_manual(values=c("21", "solid","21"))+
geom_errorbar(aes(ymin=median_RT-sem_RT,ymax=median_RT+sem_RT),linetype="solid", width=1.2,color='black') +
facet_grid(cols = vars(response))+
labs(x='set size',y='median RT (seconds)', title='Search times for participant with no insight') +
theme_bw()+
scale_x_continuous(breaks = c(4,8))+
theme(legend.position='none',
legend.background = element_rect(fill=NA))+
guides(color = FALSE, linetype=FALSE)
E2.mean_acc_no_insight <- E2.search_df %>%
mutate(response=ifelse(test_part=='presence1','present','absent')) %>%
filter(subj_id%in%E2.no_insight_subjects)%>%
group_by(response,set_size,search_type) %>%
summarise(mean_acc=mean(correct))
accplot <- ggplot(data=E2.mean_acc_no_insight,
aes(x=set_size, y=mean_acc, fill=search_type)) +
geom_bar(position='dodge',stat='identity') +
theme_classic()+
scale_fill_manual(values = c('black',"#e41a1c"))+
facet_grid(cols = vars(response))+
labs(x='set size',y='accuracy') +
scale_x_continuous(breaks = c(4,8))+
scale_y_continuous(breaks = c(0.5,1))+
coord_cartesian(ylim=c(0.5,1)) +
theme(legend.position='none')+ theme(strip.background = element_blank(),
strip.text.x = element_blank())
p <- plot_grid(RTplot,accplot,nrow=2,rel_heights=c(3,1))
ggsave('figure/termination/results_Exp2_no_insight.pdf',width=4,height=4.5)
E1.search_df%>%filter(trial==12)%>%pull(RT)%>%median()%>%printnum()
E1.search_slopes_first_trial%>%filter(search_type=='conjunction')%>%pull(estimate)%>%printnum()
E1.search_slopes_first_trial%>%filter(search_type=='color')%>%pull(estimate)%>%printnum()
apa_print(E1.anova_first_trial)$full_result$search_type_set_size
E1.first_trial_df <- E1_no_RT_exc.search_df %>%
filter(trial==1)
E1.median_search_times_first_trial <- E1.first_trial_df %>%
filter(include==1) %>%
group_by(test_part,set_size,search_type) %>%
summarise(mean_trial=mean(trial),median_RT= median(RT), num_trials=length(RT),
sem_RT=bootstrap_error(RT,N_perm))%>%
mutate(response=test_part=='presence1')
E1.search_slopes_first_trial <- E1.first_trial_df %>%
group_by(search_type) %>%
nest() %>%
mutate(model = map(data, ~ lm(RT ~ set_size, data = .x)),
tidy = map(model, ~ tidy(.x))) %>%
unnest(tidy) %>%
filter(term == 'set_size') %>%
dplyr::select(!c(data, model))
E1.anova_first_trial <- afex::aov_ez(
data = E1.first_trial_df%>%filter(include==1)
, dv = "RT"
, between = c("search_type", "set_size")
, id = "subj_id"
)
E1.median_search_times_first_trial <- E1.first_trial_df %>%
filter(include==1) %>%
group_by(test_part,set_size,search_type) %>%
summarise(mean_trial=mean(trial),median_RT= median(RT), num_trials=length(RT),
sem_RT=bootstrap_error(RT,N_perm))%>%
mutate(response=test_part=='presence1')
E1.search_slopes_first_trial
E2.search_slopes_first_trial
E1.median_search_times_color_first <- E1.color_first_df %>%
filter(include==1) %>%
group_by(test_part,set_size,search_type) %>%
summarise(mean_trial=mean(trial),
median_RT= mean(RTfiltered),
num_trials=length(RT),
sem_RT=se(RTfiltered)*1.2533)%>%
mutate(response=test_part=='presence1')
E1.median_search_times_first_trial <- E1.first_trial_df %>%
filter(include==1) %>%
group_by(test_part,set_size,search_type) %>%
summarise(mean_trial=mean(trial),median_RT= mean(RT), num_trials=length(RT),
sem_RT=bootstrap_error(RT,N_perm))%>%
mutate(response=test_part=='presence1')
ggplot(data=E1.median_search_times_first_trial,
aes(x=set_size, y=median_RT, color=search_type, fill=search_type, linetype=test_part)) +
geom_line(size=1) +
geom_point(aes(shape = search_type), size=4, color="black",stroke=1.5, alpha=0.8) +
scale_shape_manual(values=c(4,21))+
scale_fill_manual(values = c("black","#377eb8"))+
scale_color_manual(values = c("black","#377eb8"))+
scale_linetype_manual(values=c("21", "solid","21"))+
geom_errorbar(aes(ymin=median_RT-sem_RT,ymax=median_RT+sem_RT),linetype="solid", width=1.2, color="black") +
labs(x='set size',y='median RT (seconds)', title='First trial only (Exp. 1)') +
theme_bw()+
scale_x_continuous(breaks = c(4,8))+
theme(legend.position='none',
legend.background = element_rect(fill=NA))+
guides(color = FALSE, linetype=FALSE)
E1.median_search_times_first_trial <- E1.first_trial_df %>%
filter(include==1) %>%
group_by(test_part,set_size,search_type) %>%
summarise(mean_trial=mean(trial),median_RT= mean(RT), num_trials=length(RT),
sem_RT=se(RT))%>%
mutate(response=test_part=='presence1')
ggplot(data=E1.median_search_times_first_trial,
aes(x=set_size, y=median_RT, color=search_type, fill=search_type, linetype=test_part)) +
geom_line(size=1) +
geom_point(aes(shape = search_type), size=4, color="black",stroke=1.5, alpha=0.8) +
scale_shape_manual(values=c(4,21))+
scale_fill_manual(values = c("black","#377eb8"))+
scale_color_manual(values = c("black","#377eb8"))+
scale_linetype_manual(values=c("21", "solid","21"))+
geom_errorbar(aes(ymin=median_RT-sem_RT,ymax=median_RT+sem_RT),linetype="solid", width=1.2, color="black") +
labs(x='set size',y='mean RT (seconds)', title='First trial only (Exp. 1)') +
theme_bw()+
scale_x_continuous(breaks = c(4,8))+
theme(legend.position='none',
legend.background = element_rect(fill=NA))+
guides(color = FALSE, linetype=FALSE)
ggsave('figure/termination/results_first_trials_mean.pdf',width=2.5,height=3.5)
setwd("~/Documents/projects/inProgress/thesis/index")
setwd("~/Documents/projects/inProgress/thesis/index")
ggsave('figure/termination/results_first_trials_mean.pdf',width=2.5,height=3.5)
ggsave('figure/termination/results_first_trials_mean.png',width=2.5,height=3.5)
E1.export
E1.export%>%pull(age())
E1.export%>%pull(age)
E1.export%>%pull(age)%>%mean()
E1.export%>%pull(age)%>%mean(na.rm=TRUE)
E1.export%>%pull(age)%>%mean(na.rm=TRUE)%>%printnum()
E1.export%>%pull(age)%>%sd(na.rm=TRUE)%>%printnum()
E1.export%>%pull(age)%>%max(na.rm=TRUE)%>%printnum()
E1.export%>%pull(age)%>%median(na.rm=TRUE)%>%printnum()
E1.export%>%pull(age)%>%iqr(na.rm=TRUE)%>%printnum()
E1.export%>%pull(age)%>%IQR(na.rm=TRUE)%>%printnum()
E1.export%>%pull(age)%>%IQR(na.rm=TRUE)%>%printnum()
E2.export%>%pull(age)%>%median(na.rm=TRUE)%>%printnum()
E2.export%>%pull(age)%>%IQR(na.rm=TRUE)%>%printnum()
E2.export
E1.export
E2.export%>%pull(age)%>%max(na.rm=TRUE)%>%printnum()
E1.export%>%pull(age)%>%max(na.rm=TRUE)%>%printnum()
E2.export%>%pull(age)%>%max(na.rm=TRUE)%>%printnum()
E2.export%>%pull(age)%>%min(na.rm=TRUE)%>%printnum()
E1.export%>%pull(age)%>%min(na.rm=TRUE)%>%printnum()
E1.export%>%pull(age)%>%max(na.rm=TRUE)%>%printnum()
e2=list();
e2$export <- read.csv('data/MVS/expt2-export.csv');
export1 = read.csv('data/MVS/expt4-export1.csv');
export2 = read.csv('data/MVS/expt4-export2.csv');
export3 = read.csv('data/MVS/expt4-export3.csv');
merge(export1,export2)
export1
export2
rbind(export1,export2)
rbind(export1,export2)%>%bind(export3)
rbind(export1,export2)%>%rbind(export3)
rbind(export1,export2)%>%rbind(export3)%>%write.csv('data/MVS/expt4-export.csv')
e2=list();
e2$export <- read.csv('data/MVS/expt2-export.csv')%>%
filter(status=='APPROVED')
e3=list();
e3$export <- read.csv('data/MVS/expt3-export.csv')%>%
filter(status=='APPROVED')
e4=list();
e4$export <- read.csv('data/MVS/expt4-export.csv')%>%
filter(status=='APPROVED')
e2=list()
e3.export%>%pull(age)%>%median(na.rm=TRUE)%>%printnum()
# IMPORTANT: in the text, exp.2 is exp. 3 and vice versa
E2.export <- read.csv('data/MVS/expt2-export.csv')%>%
filter(status=='APPROVED')
E3.export <- read.csv('data/MVS/expt3-export.csv')%>%
filter(status=='APPROVED')
E4.export <- read.csv('data/MVS/expt4-export.csv');
E2.export%>%pull(age)%>%median(na.rm=TRUE)%>%printnum()
E2.export%>%pull(age)%>%min(na.rm=TRUE)%>%printnum()
E2.export%>%pull(age)%>%max(na.rm=TRUE)%>%printnum()
E2.export%>%pull(age)%>%median(na.rm=TRUE)%>%printnum()
E2.export%>%pull(age)%>%min(na.rm=TRUE)%>%printnum()
E2.export%>%pull(age)%>%max(na.rm=TRUE)%>%printnum()
E4.export%>%pull(age)%>%median(na.rm=TRUE)%>%printnum()
E4.export%>%pull(age)%>%min(na.rm=TRUE)%>%printnum()
E4.export%>%pull(age)%>%max(na.rm=TRUE)%>%printnum(
)
E3.export%>%pull(age)%>%median(na.rm=TRUE)%>%printnum()
E3.export%>%pull(age)%>%min(na.rm=TRUE)%>%printnum()
E3.export%>%pull(age)%>%max(na.rm=TRUE)%>%printnum()
export1 = read.csv('data/RC/Flicker2-export1.csv');
export2 = read.csv('data/RC/Flicker2-export2.csv');
rbind(export1,export2)%>%write.csv('data/RC/Flicker-export2.csv')
e2$export <- read.csv('data/RC/Flicker-export.csv')%>%
filter(status=='APPROVED')
export1 = read.csv('data/RC/Flicker2-export1.csv');
export2 = read.csv('data/RC/Flicker2-export2.csv');
rbind(export1,export2)%>%write.csv('data/RC/Flicker2-export2.csv')
rbind(export1,export2)%>%write.csv('data/RC/Flicker2-export.csv')
e3$export%>%pull(age)%>%median(na.rm=TRUE)%>%printnum()
e3$export%>%pull(age)%>%min(na.rm=TRUE)%>%printnum()
e3$export%>%pull(age)%>%max(na.rm=TRUE)%>%printnum()
e3$export <- read.csv('data/RC/Flicker2-export.csv');
unlink("03-chap3_cache", recursive = TRUE)
min_acc_disc <- 0.6;
minRT <- 250;
maxRT <- 5000;
e1=list()
e1$df <- read_csv('data/asymmetry/exp1.csv') %>%
rename('subj_id' = 'subject_identifier')
e1$export <- read_csv('data/asymmetry/exp1_export.csv')  %>%
rename('subj_id' = 'participant_id') %>%
filter(status=='approved')
filterDataFrame <- function(e) {
e$all_subjects <- e$df$subj_id%>%unique()
e$N_total <- e$all_subjects%>%length()
e$disc_df_unfiltered <- e$df %>%
filter(test_part=='disc') %>%
dplyr::select('subj_id','which_stimulus','measured_SOA','correct','RT','confidence','conf_RT') %>%
mutate(response = ifelse(correct==1, which_stimulus, 3-which_stimulus)) %>%
mutate(response= factor(response, levels=c(1,2)),
which_stimulus = factor(which_stimulus, levels=c(1,2))) %>%
group_by(subj_id) %>%
mutate(trial=row_number())
e$median_completion_time <-
e$export %>%
filter(status=='APPROVED') %>%
'$'('time_taken') %>%
median()/60
##exclude subjects
e$bad_disc <- e$disc_df_unfiltered %>%
group_by(subj_id) %>%
summarise(acc = mean(correct),
RTlow = quantile(RT,0.25),
RThigh = quantile(RT,0.75))%>%
filter(acc<min_acc_disc | RTlow<minRT| RThigh>maxRT) %>%
dplyr::select('subj_id')
e$failed_test <- e$df %>%
group_by(subj_id) %>%
summarise(fi=all(followed_instructions)) %>%
filter(fi==FALSE) %>%
dplyr::select('subj_id')
excluded <- union(e$failed_test, e$bad_disc)%>%pull()
disc_df_half_filtered <- e$disc_df_unfiltered %>%
filter(!subj_id%in%excluded &
RT>minRT &
RT<maxRT &
trial>16) %>%
group_by(subj_id) %>%
mutate(
conf_discrete = ntile(confidence,20) %>%
factor(levels=1:21),
correct = factor(correct, levels=c(0,1)),
conf_bi = ifelse(
response==1,
as.numeric(confidence),
-1*as.numeric(confidence)),
logRT = log(RT)
)
e$not_enough_errors <- disc_df_half_filtered %>%
group_by(subj_id, response, correct,.drop=FALSE) %>%
tally() %>%
group_by(subj_id) %>%
summarise(enough_errors=min(n)>1) %>%
filter(!enough_errors)%>%
dplyr::select(subj_id)
e$no_variance <- disc_df_half_filtered %>%
group_by(subj_id, response) %>%
summarise(varconf=var(confidence))%>%
group_by(subj_id)%>%
summarise(no_var=min(varconf)==0)%>%
filter(no_var)%>%
dplyr::select(subj_id)
excluded2 <- union(e$no_variance,e$not_enough_errors)%>%pull()
e$included <- setdiff(setdiff(e$all_subjects,excluded),excluded2)
e$disc_df <- disc_df_half_filtered %>%
filter(subj_id %in% e$included)
e$N <- e$included%>%length()
return(e)
}
e1 <- filterDataFrame(e1);
this.expt <- e1;
this.expt$export%>%pull(age)%>%median(na.rm=TRUE)%>%printnum()
this.expt$export
e1$export <- read_csv('data/asymmetry/exp1_export.csv')  %>%
rename('subj_id' = 'participant_id')
e1$export$status
e1$export <- read_csv('data/asymmetry/exp1_export.csv')  %>%
rename('subj_id' = 'participant_id') %>%
filter(status=='APPROVED')
this.expt$export%>%pull(age)%>%median(na.rm=TRUE)%>%printnum()
this.expt
this.expt$export
read_csv('data/asymmetry/exp1_export.csv')  %>%
rename('subj_id' = 'participant_id')
read_csv('data/asymmetry/exp1_export.csv')  %>%
rename('subj_id' = 'participant_id')$status
read_csv('data/asymmetry/exp1_export.csv')  %>%
rename('subj_id' = 'participant_id')%>%pull(status)
read_csv('data/asymmetry/exp1_export.csv')  %>%
rename('subj_id' = 'participant_id')%>%filter(status=='APPROVED')
e1$export <- read_csv('data/asymmetry/exp1_export.csv')  %>%
rename('subj_id' = 'participant_id') %>%
filter(status=='APPROVED')
this.expt <- e1;
this.expt$export%>%pull(age)%>%median(na.rm=TRUE)%>%printnum()
this.expt$export%>%pull(age)%>%min(na.rm=TRUE)%>%printnum()
this.expt$export%>%pull(age)%>%max(na.rm=TRUE)%>%printnum()
e2=list()
e2$df <- read_csv('data/asymmetry/exp2.csv') %>%
rename('subj_id' = 'subject_identifier')
e2$export <- read_csv('data/asymmetry/exp2-export.csv')  %>%
rename('subj_id' = 'participant_id') %>%
filter(status=='APPROVED')
e2 <- e2%>%
filterDataFrame() %>%
generalStats() %>%
testH1() %>%
testH2() %>%
testH3() %>%
testH4() %>%
plotROC(c('C','O'),'figure/asymmetry/exp2.png');
this.expt <- e2;
this.expt$export%>%pull(age)%>%median(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%min(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%max(na.rm=TRUE)%>%round()
e3=list()
e3$df <- read_csv('data/asymmetry/exp3.csv') %>%
rename('subj_id' = 'subject_identifier')
e3$export <- read_csv('data/asymmetry/exp3-export.csv')  %>%
rename('subj_id' = 'participant_id') %>%
filter(status=='APPROVED')
e3 <- e3%>%
filterDataFrame() %>%
generalStats() %>%
testH1() %>%
testH2() %>%
testH3() %>%
testH4() %>%
plotROC(c('tilted','vertical'),'figure/asymmetry/exp3.png');
this.expt <- e3;
this.expt$export%>%pull(age)%>%median(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%min(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%max(na.rm=TRUE)%>%round()
e4=list()
e4$df <- read_csv('data/asymmetry/exp4.csv') %>%
rename('subj_id' = 'subject_identifier')
e4$export <- read_csv('data/asymmetry/exp4-export.csv')  %>%
rename('subj_id' = 'participant_id') %>%
filter(status=='APPROVED')
e4 <- e4%>%
filterDataFrame() %>%
generalStats() %>%
testH1() %>%
testH2() %>%
testH3() %>%
testH4() %>%
plotROC(c('curved','straight'),'figure/asymmetry/exp4.png');
this.expt <- e4;
this.expt$export%>%pull(age)%>%median(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%min(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%max(na.rm=TRUE)%>%round()
e5=list()
e5$df <- read_csv('data/asymmetry/exp5.csv') %>%
rename('subj_id' = 'subject_identifier')
e5$export <- read_csv('data/asymmetry/exp5-export.csv')  %>%
rename('subj_id' = 'participant_id') %>%
filter(status=='APPROVED')
e5 <- e5%>%
filterDataFrame() %>%
generalStats() %>%
testH1() %>%
testH2() %>%
testH3() %>%
testH4() %>%
plotROC(c('up','down'),'figure/asymmetry/exp5.png');
this.expt <- e5;
this.expt$export%>%pull(age)%>%median(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%min(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%max(na.rm=TRUE)%>%round()
e6=list()
e6$df <- read_csv('data/asymmetry/exp6.csv') %>%
rename('subj_id' = 'subject_identifier')
e6$export <- read_csv('data/asymmetry/exp6-export.csv')  %>%
rename('subj_id' = 'participant_id') %>%
filter(status=='APPROVED')
e6 <- e6%>%
filterDataFrame() %>%
generalStats() %>%
testH1() %>%
testH2() %>%
testH3() %>%
testH4() %>%
plotROC(c('flipped','normal'),'figure/asymmetry/exp6.png');
this.expt <- e6;
this.expt$export%>%pull(age)%>%median(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%min(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%max(na.rm=TRUE)%>%round()
e7=list()
e7$df <- read_csv('data/asymmetry/exp7.csv') %>%
rename('subj_id' = 'subject_identifier')
e7$export <- read_csv('data/asymmetry/exp7-export.csv')  %>%
rename('subj_id' = 'participant_id') %>%
filter(status=='APPROVED')
e7 <- e7%>%
filterDataFrame() %>%
generalStats() %>%
testH1() %>%
testH2() %>%
testH3() %>%
testH4() %>%
plotROC(c('grating','noise'),'figure/asymmetry/exp7.png');
this.expt <- e7;
this.expt$export%>%pull(age)%>%median(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%min(na.rm=TRUE)%>%round()
this.expt$export%>%pull(age)%>%max(na.rm=TRUE)%>%round()
