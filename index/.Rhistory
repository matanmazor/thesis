summarise(diff=mean(diff[side=='target']));
e2$RC$signal_confidenceNoOpposite300 <- e2$signal_confidence_kernel %>%
filter(time<300 & response==0)%>%
group_by(subj_id) %>%
summarise(diff=mean(diff[side=='non-target']));
e2$RC$signal_PEBYes300 <- e2$signal_confidence_kernel %>%
filter(time<300 & response==1)%>%
group_by(subj_id) %>%
summarise(diff=mean(diff[side=='target'])+mean(diff[side=='non-target']));
e2$RC$signal_PEBNo300 <- e2$signal_confidence_kernel %>%
filter(time<300 & response==0)%>%
group_by(subj_id) %>%
summarise(diff=mean(diff[side=='target'])+mean(diff[side=='non-target']));
e3=list()
e3$df <- read_csv('data/RC/Flicker2.csv') %>%
filter(include==TRUE)%>%
group_by(s,task,trial_index) %>%
mutate(side=c(rep(0,48),rep(1,48)),
timepoint=rep(1:12,8),
eccentricity = rep(c(rep(1,12),rep(2,12),rep(3,12),rep(4,12)),2)) %>%
rename(subj_id = s,
trial_id = trial_index) %>%
mutate(detection = ifelse(task=='detection',1,0),
bright_side=ifelse(bright_side=='right',1,0),
signal=signal_presence,
detection=as.factor(detection),
response=as.factor(response),
correct=as.factor(correct),
subj_id=as.factor(subj_id)) %>%
ungroup() %>%
dplyr::select(subj_id,detection,trial_id,
RT,signal,correct,bright_side,
response,conf_RT,confidence,
luminance,side,timepoint,
eccentricity,trial, brightness_boost)
e3$trial_df <- e3$df %>%
group_by(subj_id, trial_id) %>%
summarise(
detection = detection[side==1 & timepoint==1 & eccentricity == 1],
bright_side = bright_side[side==1 & timepoint==1 & eccentricity == 1],
brightness_boost = brightness_boost[side==1 & timepoint==1 & eccentricity == 1],
signal = signal[side==1 & timepoint==1 & eccentricity == 1],
response = response[side==1 & timepoint==1 & eccentricity == 1],
RT = RT[side==1 & timepoint==1 & eccentricity == 1]-480, # stimulus duration
confidence = confidence[side==1 & timepoint==1 & eccentricity == 1],
correct = correct[side==1 & timepoint==1 & eccentricity == 1],
trial_number = trial[side==1 & timepoint==1 & eccentricity == 1],
conf_bi = ifelse(
response==1,
as.numeric(confidence),
-1*as.numeric(confidence)),
luminance_0=mean(luminance[side==0 & timepoint<8]),
luminance_1=mean(luminance[side==1 & timepoint < 8]))%>%
group_by(subj_id) %>%
mutate(
conf_discrete = ntile(confidence,20) %>%
factor(levels=1:21),
logRT=log(RT));
e3$detection_df <- e3$trial_df %>%
filter(detection==1) %>%
mutate(stimulus=signal);
e3$discrimination_df <- e3$trial_df %>%
filter(detection==0) %>%
mutate(stimulus = bright_side);
e3 <- generalStats2Tasks(e3) %>%
testAUC() %>%
testzROC2tasks();
e3$zROC <- rbind(e3$detection_zROC%>%mutate(detection=1),
e3$discrimination_zROC%>%mutate(detection=0));
e3$zROC_contast_rsquare <- e3$zROC%>%group_by(subj_id)%>%summarize(fit_diff=r.squared[detection==1]-r.squared[detection==0])
e3$discrimination_conf_PEB <- e3$trial_df %>%
filter(detection==0) %>%
group_by(subj_id, brightness_boost) %>%
summarise(confidence=mean(confidence)) %>%
group_by(subj_id)%>%
summarise(PEB=confidence[brightness_boost==2]-confidence[brightness_boost==0]);
e3$H1$t.test <- t.test(e3$discrimination_conf_PEB$PEB);
e3$H1$d <- cohensD(e3$discrimination_conf_PEB$PEB);
e3$detection_dec_PEB <- e3$trial_df %>%
filter(detection==1) %>%
group_by(subj_id, brightness_boost) %>%
summarise(P=mean(as.numeric(as.character(response))))%>%
group_by(subj_id)%>%
summarise(PEB=P[brightness_boost==2]-P[brightness_boost==0]);
e3$H2 <- t.test(e3$detection_dec_PEB$PEB);
e3$PEB_interaction <- e3$trial_df %>%
filter(correct==1 & signal==1) %>%
group_by(subj_id, detection, brightness_boost) %>%
summarise(confidence=mean(confidence)) %>%
group_by(subj_id,detection) %>%
summarise(PEB=confidence[brightness_boost==2]-confidence[brightness_boost==0]) %>%
group_by(subj_id) %>%
summarise(PEB_diff = PEB[detection==0]-PEB[detection==1]);
e3$H3 <- t.test(e3$PEB_interaction$PEB_diff);
e3$yes_conf_PEB <- e3$trial_df %>%
filter(detection==1 & response==1) %>%
group_by(subj_id, brightness_boost) %>%
summarise(confidence=mean(confidence)) %>%
group_by(subj_id)%>%
summarise(PEB=confidence[brightness_boost==2]-confidence[brightness_boost==0]);
e3$H4$BF <- ttestBF(e3$yes_conf_PEB$PEB,rscale=e3$H1$d);
e3$H4$t.test <- t.test(e3$yes_conf_PEB$PEB)
e3$no_conf_PEB <- e3$trial_df %>%
filter(detection==1 & response==0) %>%
group_by(subj_id, brightness_boost) %>%
summarise(confidence=mean(confidence)) %>%
group_by(subj_id)%>%
summarise(PEB=confidence[brightness_boost==2]-confidence[brightness_boost==0]);
e3$H5$BF <- ttestBF(e3$no_conf_PEB$PEB,rscale=e3$H1$d);
e3$H5$t.test <- t.test(e3$no_conf_PEB$PEB)
# plotAllAsymmetries(e1,'figure/RC/RC-exp3-asymmetries.pdf');
knitr::include_graphics("figure/RC/RC-exp3-asymmetries-enhanced.png")
e3$demeaned_df <- e3$df %>%
mutate(luminance=ifelse(signal==1 & side==bright_side,
luminance-134,
luminance-129),
time=(timepoint-1)*40);
e3$discRCdf <- e3$demeaned_df %>%
filter(detection==0) %>%
mutate(obj_side=factor(ifelse(side==bright_side,
'true',
'opposite'),levels=c('true','opposite')),
side = factor(ifelse(response==side,
'chosen',
'unchosen'),
levels=c('chosen','unchosen'))) %>%
dplyr::select(subj_id,timepoint,obj_side,side,eccentricity,confidence, trial,luminance, time, correct) %>%
group_by(subj_id) %>%
mutate(median_confidence=median(confidence)) %>%
ungroup() %>%
mutate(
binaryconf = ifelse(confidence>=median_confidence, 1, 0),
);
e3$discrimination_decision_kernel <- e3$discRCdf %>%
group_by (subj_id,side,time,eccentricity) %>%
summarise(luminance=mean(luminance))
e3$discrimination_objective_decision_kernel <- e3$discRCdf %>%
drop_na()%>%
group_by (subj_id,obj_side,time,eccentricity,correct) %>%
summarise(luminance=mean(luminance)) %>%
group_by(subj_id,obj_side,time,eccentricity) %>%
summarise(luminance=luminance[correct==1]-luminance[correct==0])
e3$discrimination_confidence_kernel <- e3$discRCdf %>%
group_by (subj_id,side,time,eccentricity,binaryconf) %>%
summarise(luminance=mean(luminance)) %>%
group_by (subj_id,side,time,eccentricity) %>%
summarise(diff = luminance[binaryconf==1]-luminance[binaryconf==0])
e3$RC = list();
e3$RC$decision300 <- e3$discrimination_decision_kernel %>%
filter(time<300)%>%
group_by(subj_id) %>%
summarise(diff=mean(luminance[side=='chosen'])-mean(luminance[side=='unchosen']));
e3$RC$accuracy300 <- e3$discrimination_objective_decision_kernel %>%
filter(time<300)%>%
group_by(subj_id) %>%
summarise(diff=mean(luminance[obj_side=='true'])-mean(luminance[obj_side=='opposite']));
e3$RC$decisionPEB300 <- e3$discrimination_objective_decision_kernel %>%
filter(time<300)%>%
group_by(subj_id) %>%
summarise(diff=mean(luminance[obj_side=='true'])+mean(luminance[obj_side=='opposite']));
e3$RC$confidence300 <- e3$discrimination_confidence_kernel %>%
filter(time<300)%>%
group_by(subj_id) %>%
summarise(diff=mean(diff[side=='chosen'])-mean(diff[side=='unchosen']));
e3$RC$PEB300 <- e3$discrimination_confidence_kernel %>%
filter(time<300)%>%
group_by(subj_id) %>%
summarise(diff=mean(diff[side=='chosen'])+mean(diff[side=='unchosen']));
p1 <- ggplot(e3$discrimination_decision_kernel%>%
group_by(side,time,eccentricity) %>%
summarise(se=se(luminance),
luminance=mean(luminance)) %>%
mutate(position=ifelse(side=='unchosen',
eccentricity,
5-eccentricity),
sig=pt(-abs(luminance/se),101)<0.05/48,
side=factor(side,levels=c('unchosen','chosen'))),
aes(x=position,y=time,fill=luminance)) +
geom_tile(size=1) +
geom_tile(aes(color=sig),alpha=0,size=1,show.legend = FALSE)+
scale_y_reverse() +
scale_fill_gradient2(low='#984ea3',mid='white',high='#4daf4a', midpoint=0)+
scale_colour_manual(values = c("#00000000", "#000000")) +
theme_classic()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
line = element_blank()) +
facet_wrap(~side)+
ggtitle('Decision kernel: discrimination')
e3$discrimination_confidence_kernel <- e3$discRCdf %>%
group_by (subj_id,side,time,eccentricity,binaryconf) %>%
summarise(luminance=mean(luminance)) %>%
group_by (subj_id,side,time,eccentricity) %>%
summarise(diff = luminance[binaryconf==1]-luminance[binaryconf==0])
p2 <- ggplot(e3$discrimination_confidence_kernel%>%
group_by(side,time,eccentricity) %>%
summarise(se=se(diff),
luminance=mean(diff)) %>%
mutate(position=ifelse(side=='unchosen',
eccentricity,
5-eccentricity),
sig=pt(-abs(luminance/se),101)<0.05/48,
side=factor(side,levels=c('unchosen','chosen'))),
aes(x=position,y=time,fill=luminance)) +
geom_tile(size=1) +
geom_tile(aes(color=sig),alpha=0,size=1,show.legend = FALSE)+
scale_y_reverse() +
scale_fill_gradient2(low='#984ea3',mid='white',high='#4daf4a', midpoint=0)+
scale_colour_manual(values = c("#00000000", "#000000")) +
theme_classic()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
line = element_blank()) +
facet_wrap(~side)+
ggtitle('Confidence kernel: discrimination');
p3 <- ggplot(e3$discrimination_decision_kernel%>%
group_by(side,time, subj_id) %>%
summarise(luminance=mean(luminance)) %>%
group_by(side,time)%>%
summarise(se=se(luminance),
luminance=mean(luminance)),aes(x=time,y=luminance,color=side)) +
geom_hline(yintercept=0)  +
annotate(geom = "rect", xmin=0, xmax=300, ymin=-0.5,ymax=0.5,
color="transparent", fill="orange", alpha=0.3) +
geom_line() +
geom_ribbon(aes(ymin = luminance-se, ymax = luminance+se, fill=side),alpha=0.5) +
scale_color_manual(values=discrimination_colors)+
scale_fill_manual(values=discrimination_colors) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='luminance',
x='time (ms.)')+
theme(legend.position = 'none');
p4 <- ggplot(e3$discrimination_confidence_kernel%>%
group_by(side,time, subj_id) %>%
summarise(luminance=mean(diff)) %>%
group_by(side,time)%>%
summarise(se=se(luminance),
luminance=mean(luminance)),aes(x=time,y=luminance,color=side)) +
geom_hline(yintercept=0)  +
annotate(geom = "rect", xmin=0, xmax=300, ymin=-0.8,ymax=0.8,
color="transparent", fill="orange", alpha=0.3) +
geom_line() +
geom_ribbon(aes(ymin = luminance-se, ymax = luminance+se, fill=side),alpha=0.5) +
scale_color_manual(values=discrimination_colors)+
scale_fill_manual(values=discrimination_colors) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='luminance',
x='time (ms.)')+
theme(legend.position = 'none')
p5 <- ggplot(e3$discrimination_decision_kernel%>%
group_by(time, subj_id) %>%
summarise(luminance=mean(luminance[side=='chosen'])-mean(luminance[side=='unchosen'])) %>%
group_by(time)%>%
summarise(se=se(luminance),
luminance=mean(luminance)),aes(x=time,y=luminance)) +
geom_hline(yintercept=0)  +
annotate(geom = "rect", xmin=0, xmax=300, ymin=-0.8,ymax=1.5,
color="transparent", fill="orange", alpha=0.3) +
geom_line() +
geom_ribbon(aes(ymin = luminance-se, ymax = luminance+se),alpha=0.5, color='black') +
scale_color_manual(values=discrimination_colors)+
scale_fill_manual(values=discrimination_colors) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='luminance difference',
x='time (ms.)')+
theme(legend.position = 'none');
p6 <- ggplot(e3$discrimination_confidence_kernel%>%
group_by(time, subj_id) %>%
summarise(luminance=mean(diff[side=='chosen'])-mean(diff[side=='unchosen'])) %>%
group_by(time)%>%
summarise(se=se(luminance),
luminance=mean(luminance)),aes(x=time,y=luminance)) +
geom_hline(yintercept=0)  +
annotate(geom = "rect", xmin=0, xmax=300, ymin=-0.8,ymax=1.5,
color="transparent", fill="orange", alpha=0.3) +
geom_line() +
geom_ribbon(aes(ymin = luminance-se, ymax = luminance+se),alpha=0.5,fill='black') +
scale_color_manual(values=discrimination_colors)+
scale_fill_manual(values=discrimination_colors) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='luminance difference',
x='time (ms.)')+
theme(legend.position = 'none')
# p <- grid.arrange(p1, p2, p3, p4, p5, p6, ncol=2, heights=c(2,1,1))
# ggsave('figure/RC/RC-exp3-discrimination-RC.pdf',p,width=8, height=8);
knitr::include_graphics('figure/RC/RC-exp3-discrimination-RC-enhanced.png')
e3$detRCdf <- e3$demeaned_df %>%
filter(detection==1) %>%
group_by(subj_id,time,eccentricity,confidence, trial,response) %>%
summarise(luminance=luminance[side==0]+luminance[side==1]) %>%
group_by(subj_id) %>%
mutate(median_confidence=median(confidence)) %>%
ungroup() %>%
mutate(
binaryconf = ifelse(confidence>=median_confidence, 1, 0)
);
e3$detection_decision_kernel <- e3$detRCdf %>%
group_by (subj_id,response,time,eccentricity) %>%
summarise(luminance=mean(luminance)) %>%
group_by(subj_id,time,eccentricity) %>%
summarise(diff=luminance[response==1]-luminance[response==0]);
e3$detection_confidence_kernel <- e3$detRCdf %>%
group_by (subj_id,response,time,eccentricity, binaryconf) %>%
summarise(luminance=mean(luminance)) %>%
group_by(subj_id,time,eccentricity,response) %>%
summarise(diff=luminance[binaryconf==1]-luminance[binaryconf==0]);
e3$RC$detectionDecision300 <- e3$detection_decision_kernel %>%
filter(time<300) %>%
group_by(subj_id) %>%
summarise(diff=mean(diff));
e3$RC$detectionConfidenceYes300 <- e3$detection_confidence_kernel %>%
filter(time<300) %>%
filter(response==1)%>%
group_by(subj_id) %>%
summarise(diff=mean(diff));
e3$RC$detectionConfidenceNo300 <- e3$detection_confidence_kernel %>%
filter(time<300) %>%
filter(response==0)%>%
group_by(subj_id) %>%
summarise(diff=mean(diff));
p1 <- ggplot(e3$detection_decision_kernel%>%
group_by(time,eccentricity) %>%
summarise(se=se(diff),
luminance=mean(diff)) %>%
mutate(sig=pt(-abs(luminance/se),101)<0.05/48),
aes(x=eccentricity,y=time,fill=luminance)) +
geom_tile(size=1) +
geom_tile(aes(color=sig),alpha=0,size=1,show.legend = FALSE)+
scale_y_reverse() +
scale_fill_gradient2(low=detection_colors[2],mid='white',high=detection_colors[1], midpoint=0)+
scale_colour_manual(values = c("#00000000", "#000000")) +
theme_classic()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
line = element_blank()) +
ggtitle('Decision: detection');
## confidence in 'yes' responses
p2 <- ggplot(e3$detection_confidence_kernel%>%
filter(response==1)%>%
group_by(time,eccentricity) %>%
summarise(se=se(diff),
luminance=mean(diff)) %>%
mutate(sig=pt(-abs(luminance/se),101)<0.05/48),
aes(x=eccentricity,y=time,fill=luminance)) +
geom_tile(size=1) +
geom_tile(aes(color=sig),alpha=0,size=1,show.legend = FALSE)+
scale_y_reverse() +
scale_fill_gradient2(low=detection_colors[2],mid='white',high=detection_colors[1], midpoint=0)+
scale_colour_manual(values = c("#00000000", "#000000")) +
theme_classic()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
line = element_blank()) +
ggtitle('Confidence: \'yes\'');
## confidence in 'no' responses
p3 <- ggplot(e3$detection_confidence_kernel%>%
filter(response==0)%>%
group_by(time,eccentricity) %>%
summarise(se=se(diff),
luminance=mean(diff)) %>%
mutate(sig=pt(-abs(luminance/se),101)<0.05/48),
aes(x=eccentricity,y=time,fill=luminance)) +
geom_tile(size=1) +
geom_tile(aes(color=sig),alpha=0,size=1,show.legend = FALSE)+
scale_y_reverse() +
scale_fill_gradient2(low=detection_colors[2],mid='white',high=detection_colors[1], midpoint=0)+
scale_colour_manual(values = c("#00000000", "#000000")) +
theme_classic()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
line = element_blank()) +
ggtitle('Confidence: \'no\'');
p4 <- ggplot(e3$detection_decision_kernel%>%
group_by(time, subj_id) %>%
summarise(diff=mean(diff)) %>%
group_by(time)%>%
summarise(se=se(diff),
luminance=mean(diff)),aes(x=time,y=luminance)) +
geom_hline(yintercept=0)  +
annotate(geom = "rect", xmin=0, xmax=300, ymin=-1.3,ymax=1.3,
color="transparent", fill="orange", alpha=0.3) +
geom_line() +
geom_line() +
geom_ribbon(aes(ymin = luminance-se, ymax = luminance+se),alpha=0.5) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='sum luminance',
x='time (ms.)')+
theme(legend.position = 'none');
p5 <- ggplot(e3$detection_confidence_kernel%>%
filter(response==1)%>%
group_by(time, subj_id) %>%
summarise(diff=mean(diff)) %>%
group_by(time)%>%
summarise(se=se(diff),
luminance=mean(diff)),aes(x=time,y=luminance)) +
geom_hline(yintercept=0)  +
annotate(geom = "rect", xmin=0, xmax=300, ymin=-1.3,ymax=1.3,
color="transparent", fill="orange", alpha=0.3) +
geom_line() +
geom_ribbon(aes(ymin = luminance-se, ymax = luminance+se),alpha=0.5) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='sum luminance',
x='time (ms.)')+
theme(legend.position = 'none');
p6 <- ggplot(e3$detection_confidence_kernel%>%
filter(response==0)%>%
group_by(time, subj_id) %>%
summarise(diff=mean(diff)) %>%
group_by(time)%>%
summarise(se=se(diff),
luminance=mean(diff)),aes(x=time,y=luminance)) +
geom_hline(yintercept=0)  +
annotate(geom = "rect", xmin=0, xmax=300, ymin=-1.3,ymax=1.3,
color="transparent", fill="orange", alpha=0.3) +
geom_line() +
geom_ribbon(aes(ymin = luminance-se, ymax = luminance+se),alpha=0.5) +
theme_minimal()+theme(
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(y='sum luminance',
x='time (ms)')+
theme(legend.position = 'none');
# p <-grid.arrange(p1, p2, p3, p4, p5, p6, ncol=3, top='Sum evidence')
# ggsave('figure/RC/RC-exp3-detection-RC.pdf',p, width=8, height=8);
knitr::include_graphics('figure/RC/RC-exp3-detection-RC-enhanced.png');
e3$signalRCdf <- e3$demeaned_df %>%
filter(detection==1) %>%
mutate(side = factor(ifelse(side==bright_side,
'target',
'non-target'),
levels=c('target','non-target'))) %>%
dplyr::select(subj_id,time,side,eccentricity,confidence, trial,luminance, response) %>%
group_by(subj_id, response) %>%
mutate(median_confidence=median(confidence)) %>%
ungroup() %>%
mutate(
binaryconf = ifelse(confidence>=median_confidence, 1, 0)
);
e3$signal_decision_kernel <- e3$signalRCdf %>%
group_by (subj_id,side,time,eccentricity, response) %>%
summarise(luminance=mean(luminance)) %>%
group_by(subj_id,side,time,eccentricity) %>%
summarise(luminance=luminance[response==1]-luminance[response==0])
p1 <- ggplot(e3$signal_decision_kernel%>%
group_by(side,time,eccentricity) %>%
summarise(se=se(luminance),
luminance=mean(luminance)) %>%
mutate(position=ifelse(side=='target',
eccentricity,
5-eccentricity),
sig=pt(-abs(luminance/se),101)<0.05/48,
side=factor(side,levels=c('non-target','target'))),
aes(x=position,y=time,fill=luminance)) +
geom_tile(size=1) +
geom_tile(aes(color=sig),alpha=0,size=1,show.legend = FALSE)+
scale_y_reverse() +
scale_fill_gradient2(low=detection_colors[2],mid='white',high=detection_colors[1], midpoint=0, limits=c(-1.8,1.8))+
scale_colour_manual(values = c("#00000000", "#000000")) +
theme_classic()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
line = element_blank()) +
facet_wrap(~side)+
ggtitle('Decision: detection')+
library(readr)
library(dplyr)
url <- url("https://media.githubusercontent.com/media/matanmazor/thesis/main/index/data/RC/RC.csv")
df <- read_csv(url)
df <- df %>%
mutate(
confidence = confidence / 1000,
direction = ifelse(direction == 3,1,0)
)
gdf <- df %>%
group_by(subj_id, trial_id)
system.time({
gdf_result <- summarise(
gdf,
detection = detection[timepoint == 1],
RT = RT[timepoint == 1] - 700
)
})
