geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
xlim(-3,3)+
scale_x_continuous(breaks=c(0,1))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
)
ggplot(e$normalizedSlopes,aes(x=scaled_slope,fill=search_type))+
geom_vline(xintercept = 0) +
geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
xlim(-3,3)+
scale_x_continuous(breaks=c(0,1), labels=c('0','conjunction'))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
)
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
compareSlopesInSubj <- function(e) {
normalizedRTSlopes <- e$slopes %>%
filter(measure=='RT') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction']) %>%
filter(search_type != 'conjunction')
normalizedEstimateSlopes <- e$slopes %>%
filter(measure=='estimate') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction']) %>%
filter(search_type != 'conjunction')
e$normalizedSlopes <- rbind(normalizedRTSlopes, normalizedEstimateSlopes);
e$normalized_slope_figure <- ggplot(e$normalizedSlopes,aes(x=scaled_slope,fill=search_type))+
geom_vline(xintercept = 0) +
geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
xlim(-3,3)+
scale_x_continuous(breaks=c(0,1), labels=c('0','conjunction'))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="top",
legend.title = element_blank()
);
return(e)
}
e1 <- compareSlopesInSubj(e1);
e2 <- compareSlopesInSubj(e2);
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
?scale_x_continuous
compareSlopesInSubj <- function(e) {
normalizedRTSlopes <- e$slopes %>%
filter(measure=='RT') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction']) %>%
filter(search_type != 'conjunction')
normalizedEstimateSlopes <- e$slopes %>%
filter(measure=='estimate') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction']) %>%
filter(search_type != 'conjunction')
e$normalizedSlopes <- rbind(normalizedRTSlopes, normalizedEstimateSlopes);
e$normalized_slope_figure <- ggplot(e$normalizedSlopes,aes(x=scaled_slope,fill=search_type))+
geom_vline(xintercept = 0) +
geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
scale_x_continuous(limits=c(-3,3),breaks=c(0,1), labels=c('0','conjunction'))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="top",
legend.title = element_blank()
);
return(e)
}
e1 <- compareSlopesInSubj(e1);
e2 <- compareSlopesInSubj(e2);
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
compareSlopesInSubj <- function(e) {
normalizedRTSlopes <- e$slopes %>%
filter(measure=='RT') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction'],
log_scaled=log(scaled_slope)) %>%
filter(search_type != 'conjunction')
normalizedEstimateSlopes <- e$slopes %>%
filter(measure=='estimate') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction'],
log_scaled=log(scaled_slope)) %>%
filter(search_type != 'conjunction')
e$normalizedSlopes <- rbind(normalizedRTSlopes, normalizedEstimateSlopes);
e$normalized_slope_figure <- ggplot(e$normalizedSlopes,aes(x=scaled_slope,fill=search_type))+
geom_vline(xintercept = 0) +
geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
scale_x_continuous(limits=c(-3,3),breaks=c(0,1), labels=c('0','conjunction'))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="top",
legend.title = element_blank()
);
return(e)
}
e1 <- compareSlopesInSubj(e1);
e2 <- compareSlopesInSubj(e2);
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
e1$normalizedSlopes
compareSlopesInSubj <- function(e) {
normalizedRTSlopes <- e$slopes %>%
filter(measure=='RT') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction']) %>%
filter(search_type != 'conjunction')
normalizedEstimateSlopes <- e$slopes %>%
filter(measure=='estimate') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction']) %>%
filter(search_type != 'conjunction')
e$normalizedSlopes <- rbind(normalizedRTSlopes, normalizedEstimateSlopes);
e$normalized_slope_figure <- ggplot(e$normalizedSlopes,aes(x=scaled_slope,fill=search_type))+
geom_vline(xintercept = 0) +
geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
scale_x_continuous(limits=c(-3,3),breaks=c(0,1), labels=c('0','conjunction'))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="top",
legend.title = element_blank()
);
return(e)
}
e1 <- compareSlopesInSubj(e1);
e2 <- compareSlopesInSubj(e2);
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
e1$normalizedSlopes
e1$normalizedSlopes%>%filter(search_type=='color' & measure=='RT')%>%pull(scaled_slope)
e1$normalizedSlopes%>%filter(search_type=='color' & measure=='RT')%>%pull(scaled_slope)%>%t.test()
e1$normalizedSlopes%>%filter(search_type=='color' & measure=='RT')%>%pull(scaled_slope)%>%t.test(mu=1)
e1$normalizedSlopes%>%filter(search_type=='color' & measure=='estimate')%>%pull(scaled_slope)%>%t.test()
e2$normalizedSlopes%>%filter(search_type=='color' & measure=='estimate')%>%pull(scaled_slope)%>%t.test()
e2$normalizedSlopes%>%filter(search_type=='orientation' & measure=='estimate')%>%pull(scaled_slope)%>%t.test()
e2$normalizedSlopes%>%filter(search_type=='orientation' & measure=='RT')%>%pull(scaled_slope)%>%t.test()
e2$normalizedSlopes%>%filter(search_type=='orientation' & measure=='estimate')%>%pull(scaled_slope)%>%t.test()
e2$normalizedSlopes%>%filter(search_type=='orientation' & measure=='estimate' & scaled_slope>-3 & scaled_slope<3)%>%pull(scaled_slope)%>%t.test()
e2$normalizedSlopes%>%filter(search_type=='orientation' & measure=='RT' & scaled_slope>-3 & scaled_slope<3)%>%pull(scaled_slope)%>%t.test()
e2$normalizedSlopes%>%filter(search_type=='orientation' & measure=='estimate' & scaled_slope>-3 & scaled_slope<3)%>%pull(scaled_slope)%>%t.test(mu=1)
e1$normalizedSlopes%>%filter(search_type=='shape' & measure=='estimate' & scaled_slope>-3 & scaled_slope<3)%>%pull(scaled_slope)%>%t.test(mu=1)
e1$est_conjunction_vs_shape
e1$est_conjunction_vs_orientation
e2$est_conjunction_vs_orientation
e1$search_shape_vs_conjunction <- t.test(
e1$search_slopes %>%
filter(search_type=='shape') %$%
estimate,
e1$search_slopes %>%
filter(search_type=='conjunction') %$%
estimate,
paired=TRUE)
e1$search_shape_vs_conjunction
e2$search_orientation_vs_conjunction <- t.test(
e2$search_slopes %>%
filter(search_type=='orientation') %$%
estimate,
e2$search_slopes %>%
filter(search_type=='conjunction') %$%
estimate,
paired=TRUE)
e2$search_orientation_vs_conjunction
e1$est_conjunction_vs_shape
apa_print(e1$est_conjunction_vs_shape)$statistic
apa_print(e1$est_conjunction_vs_orientation)$statistic
apa_print(e2$est_conjunction_vs_orientation)$statistic
e <- e1
normalizedRTSlopes <- e$slopes %>%
filter(measure=='RT') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0 &
estimate_ms[search_type=='conjunction']> estimate_ms[search_type=='color']) %>%
mutate(scaled_slope = (estimate_ms-estimate_ms[search_type=='color'])/
(estimate_ms[search_type=='conjunction']-estimate_ms[search_type=='color'])) %>%
filter(search_type != 'conjunction' & search_type != 'color');
normalizedEstimateSlopes <- e$slopes %>%
filter(measure=='estimate') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0 &
estimate_ms[search_type=='conjunction']> estimate_ms[search_type=='color']) %>%
mutate(scaled_slope = (estimate_ms-estimate_ms[search_type=='color'])/
(estimate_ms[search_type=='conjunction']-estimate_ms[search_type=='color'])) %>%
filter(search_type != 'conjunction' & search_type != 'color');
e$normalizedSlopes <- rbind(normalizedRTSlopes, normalizedEstimateSlopes);
ggplot(e$normalizedSlopes,aes(x=scaled_slope,fill=search_type))+
geom_vline(xintercept = 0) +
geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
scale_x_continuous(limits=c(-3,3),breaks=c(0,1), labels=c('0','conjunction'))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="top",
legend.title = element_blank()
);
ggplot(e$normalizedSlopes,aes(x=scaled_slope))+
geom_vline(xintercept = 0) +
geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
scale_x_continuous(limits=c(-3,3),breaks=c(0,1), labels=c('0','conjunction'))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.title = element_blank()
);
compareSlopesInSubj <- function(e) {
normalizedRTSlopes <- e$slopes %>%
filter(measure=='RT') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0 &
estimate_ms[search_type=='conjunction']> estimate_ms[search_type=='color']) %>%
mutate(scaled_slope = (estimate_ms-estimate_ms[search_type=='color'])/
(estimate_ms[search_type=='conjunction']-estimate_ms[search_type=='color'])) %>%
filter(search_type != 'conjunction' & search_type != 'color');
normalizedEstimateSlopes <- e$slopes %>%
filter(measure=='estimate') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0 &
estimate_ms[search_type=='conjunction']> estimate_ms[search_type=='color']) %>%
mutate(scaled_slope = (estimate_ms-estimate_ms[search_type=='color'])/
(estimate_ms[search_type=='conjunction']-estimate_ms[search_type=='color'])) %>%
filter(search_type != 'conjunction' & search_type != 'color');
e$normalizedSlopes <- rbind(normalizedRTSlopes, normalizedEstimateSlopes);
e$normalized_slope_figure <- ggplot(e$normalizedSlopes,aes(x=scaled_slope,fill=search_type))+
geom_vline(xintercept = 0) +
geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
scale_x_continuous(limits=c(-3,3),breaks=c(0,1), labels=c('0','conjunction'))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="top",
legend.title = element_blank()
);
return(e)
}
e1 <- compareSlopesInSubj(e1);
e2 <- compareSlopesInSubj(e2);
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
ggplot(e$normalizedSlopes,aes(x=scaled_slope))+
geom_vline(xintercept = 0) +
geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black', fill='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
scale_x_continuous(limits=c(-3,3),breaks=c(0,1), labels=c('0','conjunction'))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="top",
legend.title = element_blank()
);
e1$normalizedSlopes
e1$normalizedSlopes%>%filter(measure=='RT')
e1$normalizedSlopes%>%filter(measure=='RT')%>%pull(scaled_slope)
e1$normalizedSlopes%>%filter(measure=='RT')%>%pull(scaled_slope)%>%t.test()
e2$normalizedSlopes%>%filter(measure=='RT')%>%pull(scaled_slope)%>%t.test()
e2$normalizedSlopes%>%filter(measure=='estimate')%>%pull(scaled_slope)%>%t.test()
e1$normalizedSlopes%>%filter(measure=='estimate')%>%pull(scaled_slope)%>%t.test()
e1$normalizedSlopes%>%filter(measure=='estimate')%>%pull(scaled_slope)%>%t.test(mu=1)
e2$normalizedSlopes%>%filter(measure=='estimate')%>%pull(scaled_slope)%>%t.test(mu=1)
e2 <-  e2 %>%
analyzeEstimates()
e2$est_orientation_vs_color <- t.test(
e2$est_slopes %>%
filter(search_type=='orientation') %$%
estimate,
e2$est_slopes %>%
filter(search_type=='color') %$%
estimate,
paired=TRUE);
e2$est_conjunction_vs_color <- t.test(
e2$est_slopes %>%
filter(search_type=='conjunction') %$%
estimate,
e2$est_slopes %>%
filter(search_type=='color') %$%
estimate,
paired=TRUE);
e2$est_conjunction_vs_orientation <- t.test(
e2$est_slopes %>%
filter(search_type=='conjunction') %$%
estimate,
e2$est_slopes %>%
filter(search_type=='orientation') %$%
estimate,
paired=TRUE);
e2$t_est_slope_color <- e2$est_slopes %>%
filter(search_type=='color') %$%
estimate %>%
t.test(.,mu=0);
e2$t_est_slope_orientation <- e2$est_slopes %>%
filter(search_type=='orientation') %$%
estimate %>%
t.test(.,mu=0)
# Spearman correlations
e2$RT_est_corr <- e2$avgd %>%
group_by(Subj_id) %>%
summarize(COR = cor(RT,estimates,method = 'spearman',use='complete.obs'))
# Spearman part correlations, controlling for set size
e2$RT_est_corr_no_set_size <- e2$avgd %>%
group_by(Subj_id) %>%
na.omit() %>%
summarize(COR = spcor.test(estimates,RT,set_size,method = 'spearman')$estimate)
# Spearman part correlations, controlling for search type slope
e2$RT_est_corr_no_type <- e2$avgd %>%
group_by(Subj_id) %>%
na.omit() %>%
summarize(COR = spcor.test(estimates,RT,
list(
ifelse(search_type=='conjunction',1,0)*set_size,
ifelse(search_type=='orientation',1,0)*set_size),
method = 'spearman')$estimate);
# Spearman part correlations, controlling for search type and set size and for the interaction between them.
e2$RT_est_corr_no_set_size_type <- e2$avgd %>%
group_by(Subj_id) %>%
na.omit() %>%
summarize(COR = spcor.test(estimates,RT, list(
set_size,
ifelse(search_type=='conjunction',1,0)*set_size,
ifelse(search_type=='orientation',1,0)*set_size),
method = 'spearman')$estimate)
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
compareSlopesInSubj <- function(e) {
normalizedRTSlopes <- e$slopes %>%
filter(measure=='RT') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction']) %>%
filter(search_type != 'conjunction')
normalizedEstimateSlopes <- e$slopes %>%
filter(measure=='estimate') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction']) %>%
filter(search_type != 'conjunction')
e$normalizedSlopes <- rbind(normalizedRTSlopes, normalizedEstimateSlopes);
e$normalized_slope_figure <- ggplot(e$normalizedSlopes,aes(x=scaled_slope,fill=search_type))+
geom_vline(xintercept = 0) +
geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
scale_x_continuous(limits=c(-3,3),breaks=c(0,1), labels=c('0','conjunction'))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="top",
legend.title = element_blank()
);
return(e)
}
e1 <- compareSlopesInSubj(e1);
e2 <- compareSlopesInSubj(e2);
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
e1$normalizedSlopes$scaled_slope%>%median()
e1$normalizedSlopes%>%filter(measure=='estimate')%>%pull(scaled_slope)%>%median()
e1$normalizedSlopes%>%filter(measure=='estimate')%>%pull(scaled_slope)%>t.test(mu=1)
e1$normalizedSlopes%>%filter(measure=='estimate')%>%pull(scaled_slope)%>%t.test(mu=1)
compareSlopesInSubj <- function(e) {
normalizedRTSlopes <- e$slopes %>%
filter(measure=='RT') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction']) %>%
filter(search_type != 'conjunction')
normalizedEstimateSlopes <- e$slopes %>%
filter(measure=='estimate') %>%
group_by(Subj_id) %>%
filter(estimate_ms[search_type=='conjunction']>0) %>%
mutate(scaled_slope = estimate_ms/estimate_ms[search_type=='conjunction']) %>%
filter(search_type != 'conjunction')
e$normalizedSlopes <- rbind(normalizedRTSlopes, normalizedEstimateSlopes);
e$normalized_slope_figure <- ggplot(e$normalizedSlopes,aes(x=scaled_slope,fill=search_type))+
geom_vline(xintercept = 0) +
geom_vline(xintercept = 1) +
geom_density(alpha=0.5, color='black')+
labs(x="scaled slope", y = "")+
facet_grid(measure ~ .,scales='free_y') +
scale_fill_manual(values = c("#648FFF","#FFB000")) +
scale_color_manual(values = c("#648FFF","#FFB000")) +
theme_classic()+
scale_x_continuous(limits=c(-3,3),breaks=c(0,1), labels=c('0','conjunction'))+
theme(aspect.ratio=0.5,
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="top",
legend.title = element_blank()
);
return(e)
}
e1 <- compareSlopesInSubj(e1);
e2 <- compareSlopesInSubj(e2);
plot_grid(e1$normalized_slope_figure+labs(title='Experiment 1'),
e2$normalized_slope_figure+labs(title='Experiment 2'))
e1$normalizedSlopes%>%filter(measure=='estimate' & search_type=='shape')%>%pull(scaled_slope)%>%t.test(mu=1)
e1$normalizedSlopes%>%filter(measure=='estimate' & search_type=='shape')%>%pull(scaled_slope)
setwd("~/Documents/projects/inProgress/thesis/index")
unlink('04-chap4_cache', recursive = TRUE)
library('papaja')
library('dplyr')
library('magrittr')
library('broom')
library('tidyr')
library('BayesFactor')
library('lmerTest')
library('ppcor')
library('ggplot2')
library('png')
library('grid')
library('png')
library('cowplot')
options(warn=-1)
setwd('C:\\Users\\mmazor\\Documents\\projects\\inProgress\\thesis\\index')
r_refs('RJreferences.bib')
set.seed(42)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
